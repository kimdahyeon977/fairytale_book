{"ast":null,"code":"import _regeneratorRuntime from\"/Users/iminho/diaryai/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/iminho/diaryai/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{useEffect}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";function App(){var sendSentenceToServer=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(sentence){var response,jsonResponse;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch(\"http://localhost:5000/app\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({sentence:sentence})});case 3:response=_context.sent;if(!response.ok){_context.next=11;break;}_context.next=7;return response.json();case 7:jsonResponse=_context.sent;console.log(jsonResponse);// 서버로부터의 응답을 출력\n_context.next=12;break;case 11:console.log(\"Request failed!\");case 12:_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 17:case\"end\":return _context.stop();}},_callee,null,[[0,14]]);}));return function sendSentenceToServer(_x){return _ref.apply(this,arguments);};}();// 함수 사용 예\nuseEffect(function(){sendSentenceToServer(\"This is a test sentence.\");},[]);return/*#__PURE__*/_jsx(\"div\",{className:\"App\"});}export default App;","map":{"version":3,"names":["useEffect","jsx","_jsx","App","sendSentenceToServer","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","sentence","response","jsonResponse","wrap","_callee$","_context","prev","next","fetch","method","headers","body","JSON","stringify","sent","ok","json","console","log","t0","stop","_x","apply","arguments","className"],"sources":["/Users/iminho/diaryai/src/App.js"],"sourcesContent":["import { useEffect } from \"react\";\n\nfunction App() {\n  const sendSentenceToServer = async (sentence) => {\n    try {\n      const response = await fetch(\"http://localhost:5000/app\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ sentence: sentence }),\n      });\n\n      if (response.ok) {\n        const jsonResponse = await response.json();\n        console.log(jsonResponse); // 서버로부터의 응답을 출력\n      } else {\n        console.log(\"Request failed!\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // 함수 사용 예\n  useEffect(() => {\n    sendSentenceToServer(\"This is a test sentence.\");\n  }, []);\n\n  return <div className=\"App\"></div>;\n}\n\nexport default App;\n"],"mappings":"sOAAA,OAASA,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAElC,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,GAAM,CAAAC,oBAAoB,6BAAAC,IAAA,CAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAOC,QAAQ,MAAAC,QAAA,CAAAC,YAAA,QAAAL,mBAAA,GAAAM,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAAAF,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA,SAEjB,CAAAC,KAAK,CAAC,2BAA2B,CAAE,CACxDC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEb,QAAQ,CAAEA,QAAS,CAAC,CAC7C,CAAC,CAAC,QANIC,QAAQ,CAAAI,QAAA,CAAAS,IAAA,KAQVb,QAAQ,CAACc,EAAE,EAAAV,QAAA,CAAAE,IAAA,WAAAF,QAAA,CAAAE,IAAA,SACc,CAAAN,QAAQ,CAACe,IAAI,CAAC,CAAC,QAApCd,YAAY,CAAAG,QAAA,CAAAS,IAAA,CAClBG,OAAO,CAACC,GAAG,CAAChB,YAAY,CAAC,CAAE;AAAAG,QAAA,CAAAE,IAAA,kBAE3BU,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC,CAAC,QAAAb,QAAA,CAAAE,IAAA,kBAAAF,QAAA,CAAAC,IAAA,IAAAD,QAAA,CAAAc,EAAA,CAAAd,QAAA,aAGjCY,OAAO,CAACC,GAAG,CAAAb,QAAA,CAAAc,EAAM,CAAC,CAAC,yBAAAd,QAAA,CAAAe,IAAA,MAAArB,OAAA,iBAEtB,kBAnBK,CAAAL,oBAAoBA,CAAA2B,EAAA,SAAA1B,IAAA,CAAA2B,KAAA,MAAAC,SAAA,OAmBzB,CAED;AACAjC,SAAS,CAAC,UAAM,CACdI,oBAAoB,CAAC,0BAA0B,CAAC,CAClD,CAAC,CAAE,EAAE,CAAC,CAEN,mBAAOF,IAAA,QAAKgC,SAAS,CAAC,KAAK,CAAM,CAAC,CACpC,CAEA,cAAe,CAAA/B,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}