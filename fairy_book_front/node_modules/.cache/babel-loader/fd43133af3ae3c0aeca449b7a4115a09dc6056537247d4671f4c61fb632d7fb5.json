{"ast":null,"code":"var _jsxFileName = \"/Users/iminho/diaryai/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [pictureUrls, setPictureUrls] = useState([]);\n  const sendSentenceToServer = async sentence => {\n    try {\n      const response = await fetch(\"http://localhost:8000/app\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          prompt: sentence\n        })\n      });\n      if (response.ok) {\n        const jsonResponse = await response.json();\n        console.log(jsonResponse); // 서버로부터의 응답을 출력\n        setPictureUrls([...jsonResponse]);\n      } else {\n        console.log(\"Request failed!\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // 함수 사용 예\n  useEffect(() => {\n    sendSentenceToServer(\"This is a test sentence.\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: pictureUrls.map(imageURL => /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageURL,\n      alt: \"Example\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8SkkGRfk7iuPRLMSwj3y6BYX2Pw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","App","_s","pictureUrls","setPictureUrls","sendSentenceToServer","sentence","response","fetch","method","headers","body","JSON","stringify","prompt","ok","jsonResponse","json","console","log","error","className","children","map","imageURL","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/iminho/diaryai/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nfunction App() {\n  const [pictureUrls, setPictureUrls] = useState([]);\n  const sendSentenceToServer = async (sentence) => {\n    try {\n      const response = await fetch(\"http://localhost:8000/app\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ prompt: sentence }),\n      });\n\n      if (response.ok) {\n        const jsonResponse = await response.json();\n        console.log(jsonResponse); // 서버로부터의 응답을 출력\n        setPictureUrls([...jsonResponse]);\n      } else {\n        console.log(\"Request failed!\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // 함수 사용 예\n  useEffect(() => {\n    sendSentenceToServer(\"This is a test sentence.\");\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {pictureUrls.map((imageURL) => (\n        <img src={imageURL} alt=\"Example\" />\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAMO,oBAAoB,GAAG,MAAOC,QAAQ,IAAK;IAC/C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,2BAA2B,EAAE;QACxDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,MAAM,EAAER;QAAS,CAAC;MAC3C,CAAC,CAAC;MAEF,IAAIC,QAAQ,CAACQ,EAAE,EAAE;QACf,MAAMC,YAAY,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;QAC1CC,OAAO,CAACC,GAAG,CAACH,YAAY,CAAC,CAAC,CAAC;QAC3BZ,cAAc,CAAC,CAAC,GAAGY,YAAY,CAAC,CAAC;MACnC,CAAC,MAAM;QACLE,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;MAChC;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;IACpB;EACF,CAAC;;EAED;EACAvB,SAAS,CAAC,MAAM;IACdQ,oBAAoB,CAAC,0BAA0B,CAAC;EAClD,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKqB,SAAS,EAAC,KAAK;IAAAC,QAAA,EACjBnB,WAAW,CAACoB,GAAG,CAAEC,QAAQ,iBACxBxB,OAAA;MAAKyB,GAAG,EAAED,QAAS;MAACE,GAAG,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACpC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC5B,EAAA,CApCQD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAsCZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}